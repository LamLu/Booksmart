{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\fnil\fcharset0 Consolas;\f2\fnil\fcharset0 Verdana;
}
{\colortbl;\red255\green255\blue255;\red234\green234\blue234;\red213\green213\blue213;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sa260

\f0\b\fs28 \cf0 m/questions/1338728/how-to-delete-a-git-commit\
\
Careful:
\b0  
\f1 \cb2 git reset --hard
\f0 \cb1  
\i WILL DELETE YOUR WORKING DIRECTORY CHANGES
\i0 \
Assuming you are sitting on that commit, then this command will wack it...\
\pard\pardeftab720

\f1 \cf0 \cb2 git reset --hard HEAD~1\
\pard\pardeftab720\sa260

\f0 \cf0 \cb1 The 
\f1 \cb2 HEAD~1
\f0 \cb1  means the commit before head.\
Or, you could look at the output of 
\f1 \cb2 git log
\f0 \cb1 , find the commit id of the commit you want to back up to, and then do this:\
\pard\pardeftab720

\f1 \cf0 \cb2 git reset --hard <sha1-commit-id>\
\pard\pardeftab720\sa400

\f0 \cf3 \cb3 \
\pard\pardeftab720\sa260
\cf0 \cb1 If you already pushed it, you will need to do a force push to get rid of it...\
\pard\pardeftab720

\f1 \cf0 \cb2 git push origin HEAD --force\
\pard\pardeftab720\sa260

\f0\b \cf0 \cb1 However
\b0 , if others may have pulled it, then you would be better off starting a new branch. Because when they pull, it will just merge it into their work, and you will get it pushed back up again.\
If you already pushed, it may be better to use 
\f1 \cb2 git revert
\f0 \cb1 , to create a "mirror image" commit that will undo the changes. However, both commits will both be in the log.\
\pard\pardeftab720\sa400
\cf3 \cb3 \
\pard\pardeftab720\sa260
\cf0 \cb1 FYI -- 
\f1 \cb2 git reset --hard HEAD
\f0 \cb1  is great if you want to get rid of WORK IN PROGRESS. It will reset you back to the most recent commit, and erase all the changes in your working tree and index.\
\pard\pardeftab720\sa400
\cf3 \cb3 \
\pard\pardeftab720\sa260
\cf0 \cb1 Lastly, if you need to find a commit that you "deleted", it is typically present in 
\f1 \cb2 git reflog
\f0 \cb1  unless you have garbage collected your repository.\
\
\
------------------- MERGING PROBLEM SOLVED------\
\pard\pardeftab720

\f2\fs26 \cf0 git fetch --all \
git reset --hard origin/master }